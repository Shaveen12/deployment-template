version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier
    restart: unless-stopped

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme_state:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${ACME_EMAIL}
    depends_on:
      - nginx-proxy
    networks:
      - proxy-tier
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        PUBLIC_API_BASE: https://api.${DOMAIN}
    container_name: frontend
    environment:
      - VIRTUAL_HOST=app.${DOMAIN}
      - LETSENCRYPT_HOST=app.${DOMAIN}
      - VIRTUAL_PORT=80
    networks:
      - proxy-tier
    restart: unless-stopped

  api:
    build: ./api
    container_name: api
    environment:
      - VIRTUAL_HOST=api.${DOMAIN}
      - LETSENCRYPT_HOST=api.${DOMAIN}
      - VIRTUAL_PORT=3000
      - ALLOWED_ORIGIN=https://app.${DOMAIN}
    networks:
      - proxy-tier
    restart: unless-stopped

networks:
  proxy-tier:
    driver: bridge

volumes:
  nginx_conf:
  nginx_vhost:
  nginx_html:
  nginx_certs:
  acme_state:
